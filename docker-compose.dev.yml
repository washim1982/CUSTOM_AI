name: custom_ai_dev

services:
  # ───────────────────────────────
  # 🧠 Ollama (GPU-backed dev instance)
  # ───────────────────────────────
  ollama-dev:
    image: ollama/ollama:latest
    container_name: ollama-dev
    entrypoint: ["/bin/sh", "/entrypoint.sh"]
    volumes:
      - ./ollama_entrypoint.sh:/entrypoint.sh
      - ollama_dev_data:/root/.ollama
      - loras_dev:/loras
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    runtime: nvidia
    restart: unless-stopped
    networks:
      - devnet
    ports:
      - "11435:11434"   # ✅ dev Ollama distinct from prod (11434)

  # ───────────────────────────────
  # ⚙️ Backend (Uvicorn auto-reload)
  # ───────────────────────────────
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: backend-dev
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app
    ports:
      - "8001:8000"     # ✅ dev backend runs on 8001, not 8000
    environment:
      - OLLAMA_HOST=http://ollama-dev:11434
      - PYTHONUNBUFFERED=1
    depends_on:
      - ollama-dev
    networks:
      - devnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ───────────────────────────────
  # 💻 Frontend (React hot-reload)
  # ───────────────────────────────
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend-dev
    command: npm start
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3002:3000"     # ✅ dev frontend distinct from prod (3000/80)
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_BASE=http://backend-dev:8000/api
    depends_on:
      - backend-dev
    networks:
      - devnet

  # ───────────────────────────────
  # 🌐 Nginx proxy (optional for dev)
  # ───────────────────────────────
  nginx-dev:
    image: nginx:stable-alpine
    container_name: nginx-dev
    ports:
      - "3080:80"       # ✅ dev nginx proxy distinct from prod (80)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/build:/usr/share/nginx/html:ro
    depends_on:
      - backend-dev
    networks:
      - devnet

# ───────────────────────────────
# 📦 Volumes
# ───────────────────────────────
volumes:
  ollama_dev_data:
  loras_dev:

# ───────────────────────────────
# 🌐 Network
# ───────────────────────────────
networks:
  devnet:
    driver: bridge
